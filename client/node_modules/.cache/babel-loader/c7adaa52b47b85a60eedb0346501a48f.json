{"ast":null,"code":"import React,{useEffect}from'react';import{UPDATE_CATEGORIES,UPDATE_CURRENT_CATEGORY}from'../../utils/actions';import{useQuery}from'@apollo/react-hooks';import{QUERY_CATEGORIES}from\"../../utils/queries\";// import { useStoreContext } from \"../../utils/GlobalState\";\nimport{idbPromise}from'../../utils/helpers';import{useSelector,useDispatch}from\"react-redux\";function CategoryMenu(){// const [state, dispatch] = useStoreContext();\nvar state=useSelector(function(state){return state;});var dispatch=useDispatch();var _useQuery=useQuery(QUERY_CATEGORIES),loading=_useQuery.loading,categoryData=_useQuery.data;var categories=state.categories;useEffect(function(){if(categoryData){dispatch({type:UPDATE_CATEGORIES,categories:categoryData.categories});categoryData.categories.forEach(function(category){idbPromise('categories','put',category);});}else if(!loading){idbPromise('categories','get').then(function(categories){dispatch({type:UPDATE_CATEGORIES,categories:categories});});}},[categoryData,loading,dispatch]);var handleClick=function handleClick(id){dispatch({type:UPDATE_CURRENT_CATEGORY,currentCategory:id});};return/*#__PURE__*/React.createElement(\"div\",{className:\"catDiv\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Cannabis Types:\"),categories.map(function(item){return/*#__PURE__*/React.createElement(\"button\",{className:\"catButton\",key:item._id,onClick:function onClick(){handleClick(item._id);}},item.name);}));}export default CategoryMenu;","map":{"version":3,"sources":["C:/Users/Trevor Pino/Desktop/flippin-finds/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","useQuery","QUERY_CATEGORIES","idbPromise","useSelector","useDispatch","CategoryMenu","state","dispatch","loading","categoryData","data","categories","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,iBAAT,CAA4BC,uBAA5B,KAA2D,qBAA3D,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA;AACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,QAASC,CAAAA,YAAT,EAAwB,CACtB;AACA,GAAMC,CAAAA,KAAK,CAAGH,WAAW,CAAC,SAAAG,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CAJsB,cAMkBJ,QAAQ,CAACC,gBAAD,CAN1B,CAMdO,OANc,WAMdA,OANc,CAMCC,YAND,WAMLC,IANK,IAQdC,CAAAA,UARc,CAQCL,KARD,CAQdK,UARc,CAUtBd,SAAS,CAAC,UAAM,CACd,GAAIY,YAAJ,CAAkB,CAChBF,QAAQ,CAAC,CACPK,IAAI,CAAEd,iBADC,CAEPa,UAAU,CAAEF,YAAY,CAACE,UAFlB,CAAD,CAAR,CAIAF,YAAY,CAACE,UAAb,CAAwBE,OAAxB,CAAgC,SAAAC,QAAQ,CAAI,CAC1CZ,UAAU,CAAC,YAAD,CAAe,KAAf,CAAsBY,QAAtB,CAAV,CACD,CAFD,EAGD,CARD,IAQO,IAAI,CAACN,OAAL,CAAc,CACnBN,UAAU,CAAC,YAAD,CAAe,KAAf,CAAV,CAAgCa,IAAhC,CAAqC,SAAAJ,UAAU,CAAI,CACjDJ,QAAQ,CAAC,CACPK,IAAI,CAAEd,iBADC,CAEPa,UAAU,CAAEA,UAFL,CAAD,CAAR,CAID,CALD,EAMD,CACF,CAjBQ,CAiBN,CAACF,YAAD,CAAeD,OAAf,CAAwBD,QAAxB,CAjBM,CAAT,CAmBA,GAAMS,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,EAAE,CAAI,CACxBV,QAAQ,CAAC,CACPK,IAAI,CAAEb,uBADC,CAEPmB,eAAe,CAAED,EAFV,CAAD,CAAR,CAID,CALD,CAOA,mBACE,2BAAK,SAAS,CAAC,QAAf,eACE,gDADF,CAEGN,UAAU,CAACQ,GAAX,CAAe,SAAAC,IAAI,qBAClB,8BAAQ,SAAS,CAAC,WAAlB,CACE,GAAG,CAAEA,IAAI,CAACC,GADZ,CAEE,OAAO,CAAE,kBAAM,CACbL,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX,CACD,CAJH,EAMGD,IAAI,CAACE,IANR,CADkB,EAAnB,CAFH,CADF,CAeD,CAED,cAAejB,CAAAA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\r\n// import { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction CategoryMenu() {\r\n  // const [state, dispatch] = useStoreContext();\r\n  const state = useSelector(state => state);\r\n\r\n  const dispatch = useDispatch(); \r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  const { categories } = state;\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories\r\n      });\r\n      categoryData.categories.forEach(category => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then(categories => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = id => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"catDiv\">\r\n      <h2>Cannabis Types:</h2>\r\n      {categories.map(item => (\r\n        <button className=\"catButton\"\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n"]},"metadata":{},"sourceType":"module"}