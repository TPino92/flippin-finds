{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Trevor Pino\\\\Desktop\\\\flippin-finds\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\Trevor Pino\\\\Desktop\\\\flippin-finds\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";// import { useReducer } from 'react';\nimport{UPDATE_PRODUCTS,UPDATE_CATEGORIES,UPDATE_CURRENT_CATEGORY,ADD_TO_CART,ADD_MULTIPLE_TO_CART,REMOVE_FROM_CART,UPDATE_CART_QUANTITY,CLEAR_CART,TOGGLE_CART}from'./actions';var initialState={products:[],cart:[],cartOpen:false,categories:[],currentCategory:''};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){// if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\ncase UPDATE_PRODUCTS:return _objectSpread(_objectSpread({},state),{},{products:_toConsumableArray(action.products)});// if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\ncase UPDATE_CATEGORIES:return _objectSpread(_objectSpread({},state),{},{categories:_toConsumableArray(action.categories)});case UPDATE_CURRENT_CATEGORY:return _objectSpread(_objectSpread({},state),{},{currentCategory:action.currentCategory});case ADD_TO_CART:return _objectSpread(_objectSpread({},state),{},{cartOpen:true,cart:[].concat(_toConsumableArray(state.cart),[action.product])});case ADD_MULTIPLE_TO_CART:return _objectSpread(_objectSpread({},state),{},{cart:[].concat(_toConsumableArray(state.cart),_toConsumableArray(action.products))});case REMOVE_FROM_CART:var newState=state.cart.filter(function(product){return product._id!==action._id;});return _objectSpread(_objectSpread({},state),{},{cartOpen:newState.length>0,cart:newState});case UPDATE_CART_QUANTITY:return _objectSpread(_objectSpread({},state),{},{cartOpen:true,cart:state.cart.map(function(product){if(action._id===product._id){product.purchaseQuantity=action.purchaseQuantity;}return product;})});case CLEAR_CART:return _objectSpread(_objectSpread({},state),{},{cartOpen:false,cart:[]});case TOGGLE_CART:return _objectSpread(_objectSpread({},state),{},{cartOpen:!state.cartOpen});default:return state;}};// export function useProductReducer(initialState) {\n//     return useReducer(reducer, initialState);\n//   }\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Trevor Pino/Desktop/flippin-finds/client/src/utils/reducers.js"],"names":["UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","CLEAR_CART","TOGGLE_CART","initialState","products","cart","cartOpen","categories","currentCategory","reducer","state","action","type","product","newState","filter","_id","length","map","purchaseQuantity"],"mappings":"2WAAA;AAEA,OACIA,eADJ,CAEIC,iBAFJ,CAGIC,uBAHJ,CAIIC,WAJJ,CAKIC,oBALJ,CAMIC,gBANJ,CAOIC,oBAPJ,CAQIC,UARJ,CASIC,WATJ,KAUS,WAVT,CAYA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,QAAQ,CAAE,EADO,CAEjBC,IAAI,CAAE,EAFW,CAGjBC,QAAQ,CAAE,KAHO,CAIjBC,UAAU,CAAE,EAJK,CAKjBC,eAAe,CAAE,EALA,CAArB,CAQA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBP,YAAyB,IAAXQ,CAAAA,MAAW,2CAClD,OAAQA,MAAM,CAACC,IAAf,EACI;AACA,IAAKlB,CAAAA,eAAL,CACA,sCACOgB,KADP,MAEIN,QAAQ,oBAAMO,MAAM,CAACP,QAAb,CAFZ,GAIA;AACA,IAAKT,CAAAA,iBAAL,CACA,sCACOe,KADP,MAEIH,UAAU,oBAAMI,MAAM,CAACJ,UAAb,CAFd,GAIA,IAAKX,CAAAA,uBAAL,CACA,sCACOc,KADP,MAEIF,eAAe,CAAEG,MAAM,CAACH,eAF5B,GAIA,IAAKX,CAAAA,WAAL,CACA,sCACOa,KADP,MAEIJ,QAAQ,CAAE,IAFd,CAGID,IAAI,8BAAMK,KAAK,CAACL,IAAZ,GAAkBM,MAAM,CAACE,OAAzB,EAHR,GAKA,IAAKf,CAAAA,oBAAL,CACA,sCACOY,KADP,MAEIL,IAAI,8BAAMK,KAAK,CAACL,IAAZ,qBAAqBM,MAAM,CAACP,QAA5B,EAFR,GAIA,IAAKL,CAAAA,gBAAL,CACI,GAAIe,CAAAA,QAAQ,CAAGJ,KAAK,CAACL,IAAN,CAAWU,MAAX,CAAkB,SAAAF,OAAO,CAAI,CACxC,MAAOA,CAAAA,OAAO,CAACG,GAAR,GAAgBL,MAAM,CAACK,GAA9B,CACH,CAFc,CAAf,CAIA,sCACON,KADP,MAEIJ,QAAQ,CAAEQ,QAAQ,CAACG,MAAT,CAAkB,CAFhC,CAGIZ,IAAI,CAAES,QAHV,GAKJ,IAAKd,CAAAA,oBAAL,CACA,sCACOU,KADP,MAEIJ,QAAQ,CAAE,IAFd,CAGID,IAAI,CAAEK,KAAK,CAACL,IAAN,CAAWa,GAAX,CAAe,SAAAL,OAAO,CAAI,CAChC,GAAIF,MAAM,CAACK,GAAP,GAAeH,OAAO,CAACG,GAA3B,CAAgC,CAC5BH,OAAO,CAACM,gBAAR,CAA2BR,MAAM,CAACQ,gBAAlC,CACH,CACD,MAAON,CAAAA,OAAP,CACC,CALK,CAHV,GAUA,IAAKZ,CAAAA,UAAL,CACA,sCACOS,KADP,MAEIJ,QAAQ,CAAE,KAFd,CAGID,IAAI,CAAE,EAHV,GAKA,IAAKH,CAAAA,WAAL,CACA,sCACOQ,KADP,MAEIJ,QAAQ,CAAE,CAACI,KAAK,CAACJ,QAFrB,GAKA,QACA,MAAOI,CAAAA,KAAP,CA/DJ,CAiEC,CAlED,CAoEA;AACA;AACA;AAEA,cAAeD,CAAAA,OAAf","sourcesContent":["// import { useReducer } from 'react';\r\n\r\nimport {\r\n    UPDATE_PRODUCTS,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY,\r\n    ADD_TO_CART,\r\n    ADD_MULTIPLE_TO_CART,\r\n    REMOVE_FROM_CART,\r\n    UPDATE_CART_QUANTITY,\r\n    CLEAR_CART,\r\n    TOGGLE_CART\r\n  } from './actions';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    cart: [],\r\n    cartOpen: false,\r\n    categories: [],\r\n    currentCategory: '',\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\nswitch (action.type) {\r\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\r\n    case UPDATE_PRODUCTS:\r\n    return {\r\n        ...state,\r\n        products: [...action.products]\r\n    };\r\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\r\n    case UPDATE_CATEGORIES:\r\n    return {\r\n        ...state,\r\n        categories: [...action.categories]\r\n    };\r\n    case UPDATE_CURRENT_CATEGORY:\r\n    return {\r\n        ...state,\r\n        currentCategory: action.currentCategory\r\n    };\r\n    case ADD_TO_CART:\r\n    return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product]\r\n    };\r\n    case ADD_MULTIPLE_TO_CART:\r\n    return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n    };\r\n    case REMOVE_FROM_CART:\r\n        let newState = state.cart.filter(product => {\r\n            return product._id !== action._id;\r\n        });\r\n\r\n        return {\r\n            ...state,\r\n            cartOpen: newState.length > 0,\r\n            cart: newState\r\n        };\r\n    case UPDATE_CART_QUANTITY:\r\n    return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map(product => {\r\n        if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity;\r\n        }\r\n        return product;\r\n        })\r\n    };\r\n    case CLEAR_CART:\r\n    return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: []\r\n    };\r\n    case TOGGLE_CART:\r\n    return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen\r\n    };\r\n\r\n    default:\r\n    return state;\r\n}\r\n};\r\n\r\n// export function useProductReducer(initialState) {\r\n//     return useReducer(reducer, initialState);\r\n//   }\r\n\r\nexport default reducer; "]},"metadata":{},"sourceType":"module"}