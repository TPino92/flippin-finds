{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trevor Pino\\\\Desktop\\\\flippin-finds\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_CATEGORIES } from \"../../utils/queries\"; // import { useStoreContext } from \"../../utils/GlobalState\";\n\nimport { idbPromise } from '../../utils/helpers';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction CategoryMenu() {\n  // const [state, dispatch] = useStoreContext();\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  const {\n    categories\n  } = state;\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"catDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Cannabis Types:\"), categories.map(item => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"catButton\",\n    key: item._id,\n    onClick: () => {\n      handleClick(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, item.name)));\n}\n\nexport default CategoryMenu;","map":{"version":3,"sources":["C:/Users/Trevor Pino/Desktop/flippin-finds/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","useQuery","QUERY_CATEGORIES","idbPromise","useSelector","useDispatch","CategoryMenu","state","dispatch","loading","data","categoryData","categories","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,EAA4BC,uBAA5B,QAA2D,qBAA3D;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,gBAAT,QAAiC,qBAAjC,C,CACA;;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,SAASC,YAAT,GAAwB;AACtB;AACA,QAAMC,KAAK,GAAGH,WAAW,CAACG,KAAK,IAAIA,KAAV,CAAzB;AAEA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAkCV,QAAQ,CAACC,gBAAD,CAAhD;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAiBL,KAAvB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,YAAJ,EAAkB;AAChBH,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEd,iBADC;AAEPa,QAAAA,UAAU,EAAED,YAAY,CAACC;AAFlB,OAAD,CAAR;AAIAD,MAAAA,YAAY,CAACC,UAAb,CAAwBE,OAAxB,CAAgCC,QAAQ,IAAI;AAC1CZ,QAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,EAAsBY,QAAtB,CAAV;AACD,OAFD;AAGD,KARD,MAQO,IAAI,CAACN,OAAL,EAAc;AACnBN,MAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,CAAV,CAAgCa,IAAhC,CAAqCJ,UAAU,IAAI;AACjDJ,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEd,iBADC;AAEPa,UAAAA,UAAU,EAAEA;AAFL,SAAD,CAAR;AAID,OALD;AAMD;AACF,GAjBQ,EAiBN,CAACD,YAAD,EAAeF,OAAf,EAAwBD,QAAxB,CAjBM,CAAT;;AAmBA,QAAMS,WAAW,GAAGC,EAAE,IAAI;AACxBV,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb,uBADC;AAEPmB,MAAAA,eAAe,EAAED;AAFV,KAAD,CAAR;AAID,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGN,UAAU,CAACQ,GAAX,CAAeC,IAAI,iBAClB;AAAQ,IAAA,SAAS,EAAC,WAAlB;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbL,MAAAA,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGD,IAAI,CAACE,IANR,CADD,CAFH,CADF;AAeD;;AAED,eAAejB,YAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\r\n// import { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction CategoryMenu() {\r\n  // const [state, dispatch] = useStoreContext();\r\n  const state = useSelector(state => state);\r\n\r\n  const dispatch = useDispatch(); \r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  const { categories } = state;\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories\r\n      });\r\n      categoryData.categories.forEach(category => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then(categories => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = id => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"catDiv\">\r\n      <h2>Cannabis Types:</h2>\r\n      {categories.map(item => (\r\n        <button className=\"catButton\"\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n"]},"metadata":{},"sourceType":"module"}