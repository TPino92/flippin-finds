{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Trevor Pino\\\\Desktop\\\\flippin-finds\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React from\"react\";import{Link}from\"react-router-dom\";import{pluralize}from\"../../utils/helpers\";// import { useStoreContext } from '../../utils/GlobalState';\nimport{ADD_TO_CART,UPDATE_CART_QUANTITY}from'../../utils/actions';import{idbPromise}from\"../../utils/helpers\";import{useSelector,useDispatch}from\"react-redux\";function ProductItem(item){var image=item.image,name=item.name,_id=item._id,price=item.price,quantity=item.quantity;// const [state, dispatch] = useStoreContext();\nvar state=useSelector(function(state){return state;});var dispatch=useDispatch();var cart=state.cart;var addToCart=function addToCart(){var itemInCart=cart.find(function(cartItem){return cartItem._id===_id;});if(itemInCart){dispatch({type:UPDATE_CART_QUANTITY,_id:_id,purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1});idbPromise('cart','put',_objectSpread(_objectSpread({},itemInCart),{},{purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1}));}else{dispatch({type:ADD_TO_CART,product:_objectSpread(_objectSpread({},item),{},{purchaseQuantity:1})});idbPromise('cart','put',_objectSpread(_objectSpread({},item),{},{purchaseQuantity:1}));}};return/*#__PURE__*/React.createElement(\"div\",{className:\"card px-1 py-1\"},/*#__PURE__*/React.createElement(Link,{to:\"/products/\".concat(_id)},/*#__PURE__*/React.createElement(\"img\",{className:\"imgCard\",alt:name,src:\"/images/\".concat(image)}),/*#__PURE__*/React.createElement(\"p\",{className:\"prodName\"},name)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,quantity,\" \",pluralize(\"item\",quantity),\" in stock\"),/*#__PURE__*/React.createElement(\"span\",null,\"$\",price)),/*#__PURE__*/React.createElement(\"button\",{className:\"btnStash\",onClick:addToCart},\"Add to Stash\"));}export default ProductItem;","map":{"version":3,"sources":["C:/Users/Trevor Pino/Desktop/flippin-finds/client/src/components/ProductItem/index.js"],"names":["React","Link","pluralize","ADD_TO_CART","UPDATE_CART_QUANTITY","idbPromise","useSelector","useDispatch","ProductItem","item","image","name","_id","price","quantity","state","dispatch","cart","addToCart","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,SAAT,KAA0B,qBAA1B,CACA;AACA,OAASC,WAAT,CAAsBC,oBAAtB,KAAkD,qBAAlD,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA2B,IAEvBC,CAAAA,KAFuB,CAOrBD,IAPqB,CAEvBC,KAFuB,CAGvBC,IAHuB,CAOrBF,IAPqB,CAGvBE,IAHuB,CAIvBC,GAJuB,CAOrBH,IAPqB,CAIvBG,GAJuB,CAKvBC,KALuB,CAOrBJ,IAPqB,CAKvBI,KALuB,CAMvBC,QANuB,CAOrBL,IAPqB,CAMvBK,QANuB,CASzB;AACA,GAAMC,CAAAA,KAAK,CAAGT,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAZyB,GAcjBU,CAAAA,IAdiB,CAcRF,KAdQ,CAcjBE,IAdiB,CAgBzB,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,UAAU,CAAGF,IAAI,CAACG,IAAL,CAAU,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACT,GAAT,GAAiBA,GAA/B,EAAV,CAAnB,CACA,GAAIO,UAAJ,CAAgB,CACdH,QAAQ,CAAC,CACPM,IAAI,CAAElB,oBADC,CAEPQ,GAAG,CAAEA,GAFE,CAGPW,gBAAgB,CAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,CAAwC,CAHnD,CAAD,CAAR,CAKAlB,UAAU,CAAC,MAAD,CAAS,KAAT,gCACLc,UADK,MAERI,gBAAgB,CAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,CAAwC,CAFlD,GAAV,CAID,CAVD,IAUO,CACLP,QAAQ,CAAC,CACPM,IAAI,CAAEnB,WADC,CAEPsB,OAAO,gCAAOhB,IAAP,MAAac,gBAAgB,CAAE,CAA/B,EAFA,CAAD,CAAR,CAIAlB,UAAU,CAAC,MAAD,CAAS,KAAT,gCAAqBI,IAArB,MAA2Bc,gBAAgB,CAAE,CAA7C,GAAV,CACD,CACF,CAnBD,CAqBA,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,oBAAC,IAAD,EAAM,EAAE,qBAAeX,GAAf,CAAR,eACE,2BAAK,SAAS,CAAC,SAAf,CACE,GAAG,CAAED,IADP,CAEE,GAAG,mBAAaD,KAAb,CAFL,EADF,cAKE,yBAAG,SAAS,CAAC,UAAb,EAAyBC,IAAzB,CALF,CADF,cAQE,4CACE,+BAAMG,QAAN,KAAiBZ,SAAS,CAAC,MAAD,CAASY,QAAT,CAA1B,aADF,cAEE,oCAAQD,KAAR,CAFF,CARF,cAYE,8BAAQ,SAAS,CAAC,UAAlB,CAA6B,OAAO,CAAEK,SAAtC,iBAZF,CADF,CAgBD,CAED,cAAeV,CAAAA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pluralize } from \"../../utils/helpers\";\r\n// import { useStoreContext } from '../../utils/GlobalState';\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction ProductItem(item) {\r\n  const {\r\n    image,\r\n    name,\r\n    _id,\r\n    price,\r\n    quantity\r\n  } = item;\r\n\r\n  // const [state, dispatch] = useStoreContext();\r\n  const state = useSelector(state => state);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { cart } = state;\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img className=\"imgCard\"\r\n          alt={name}\r\n          src={`/images/${image}`}\r\n        />\r\n        <p className=\"prodName\">{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\r\n        <span>${price}</span>\r\n      </div>\r\n      <button className=\"btnStash\" onClick={addToCart}>Add to Stash</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n"]},"metadata":{},"sourceType":"module"}