{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trevor Pino\\\\Desktop\\\\flippin-finds\\\\client\\\\src\\\\components\\\\CartItem\\\\index.js\";\nimport React from 'react'; // import { useStoreContext } from '../../utils/GlobalState';\n\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useDispatch } from 'react-redux';\n\nconst CartItem = ({\n  item\n}) => {\n  // const [dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item\n    });\n  };\n\n  const onChange = e => {\n    const value = e.target.value;\n\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item\n      });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item,\n        purchaseQuantity: parseInt(value)\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/${item.image}`,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, item.name, \", $\", item.price), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Qty:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"1\",\n    value: item.purchaseQuantity,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"trash\",\n    onClick: () => removeFromCart(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDDD1\\uFE0F\"))));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["C:/Users/Trevor Pino/Desktop/flippin-finds/client/src/components/CartItem/index.js"],"names":["React","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","idbPromise","useDispatch","CartItem","item","dispatch","removeFromCart","type","_id","onChange","e","value","target","purchaseQuantity","parseInt","image","name","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAuD,qBAAvD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3B;AACA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AAEA,QAAMI,cAAc,GAAGF,IAAI,IAAI;AAC3BC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,gBADC;AAEPS,MAAAA,GAAG,EAAEJ,IAAI,CAACI;AAFH,KAAD,CAAR;AAIAP,IAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGG;AAAL,KAAnB,CAAV;AACD,GANH;;AAQA,QAAMK,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;;AAEA,QAAIA,KAAK,KAAK,GAAd,EAAmB;AACfN,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAER,gBADC;AAEPS,QAAAA,GAAG,EAAEJ,IAAI,CAACI;AAFH,OAAD,CAAR;AAKAP,MAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGG;AAAL,OAAnB,CAAV;AACD,KAPH,MAOS;AACLC,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEP,oBADC;AAEPQ,QAAAA,GAAG,EAAEJ,IAAI,CAACI,GAFH;AAGPK,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAHnB,OAAD,CAAR;AAMAV,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAE,GAAGG,IAAL;AAAWS,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAArC,OAAhB,CAAV;AACD;AACJ,GAnBH;;AAqBF,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAG,WAAUP,IAAI,CAACW,KAAM,EAD7B;AAEE,IAAA,GAAG,EAAC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,IAAI,CAACY,IAAX,SAAoBZ,IAAI,CAACa,KAAzB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACM,IAAA,IAAI,EAAC,QADX;AAEM,IAAA,WAAW,EAAC,GAFlB;AAGM,IAAA,KAAK,EAAEb,IAAI,CAACS,gBAHlB;AAIM,IAAA,QAAQ,EAAEJ,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AACM,IAAA,IAAI,EAAC,KADX;AAEM,kBAAW,OAFjB;AAGM,IAAA,OAAO,EAAE,MAAMH,cAAc,CAACF,IAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF,CAFF,CAPF,CADF;AA6BD,CA9DD;;AAgEA,eAAeD,QAAf","sourcesContent":["import React from 'react';\r\n// import { useStoreContext } from '../../utils/GlobalState';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst CartItem = ({ item }) => {\r\n    // const [dispatch] = useStoreContext();\r\n    const dispatch = useDispatch(); \r\n\r\n    const removeFromCart = item => {\r\n        dispatch({\r\n          type: REMOVE_FROM_CART,\r\n          _id: item._id\r\n        });\r\n        idbPromise('cart', 'delete', { ...item });\r\n      };\r\n\r\n    const onChange = (e) => {\r\n        const value = e.target.value;\r\n      \r\n        if (value === '0') {\r\n            dispatch({\r\n              type: REMOVE_FROM_CART,\r\n              _id: item._id\r\n            });\r\n          \r\n            idbPromise('cart', 'delete', { ...item });\r\n          } else {\r\n            dispatch({\r\n              type: UPDATE_CART_QUANTITY,\r\n              _id: item._id,\r\n              purchaseQuantity: parseInt(value)\r\n            });\r\n          \r\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n          }\r\n      };\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n                type=\"number\"\r\n                placeholder=\"1\"\r\n                value={item.purchaseQuantity}\r\n                onChange={onChange}\r\n                />\r\n          <span\r\n                role=\"img\"\r\n                aria-label=\"trash\"\r\n                onClick={() => removeFromCart(item)}\r\n                >\r\n                üóëÔ∏è\r\n                </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}